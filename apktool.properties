#http://blog.csdn.net/yanzi1225627/article/details/48215549
#
#Apktool：http://ibotpeaches.github.io/Apktool/install/ 最新版本2.0.1
#dex2jar: https://github.com/pxb1988/dex2jar 最新版本2.0
#JD-GUI: http://jd.benow.ca/ 最新版本1.4.0 
#3，将所下载的jar文件改名为”apktool.jar” 
#4,将shell脚本”apktool”和”apktool.jar”放到 “/usr/local/bin”目录下 
#5,增加这两个文件可执行权限，chmod a+x file 

# apktool d hongbao.apk
# 2，我们要用dex2jar将apk转成jar文件，实质是将apk里的classes.dex转成jar。将dex2jar里的d2j_invoke.sh／d2j-dex2jar.sh增加可执行权限。然后进到dex2jar这个文件夹下运行: 
# ./d2j-dex2jar.sh /Users/yanzi/apk/hongbao.apk 
# 得到hongbao-dex2jar.jar文件。 
# 3，打开JD-GUI，将hongbao-dex2jar.jar拖进去就看到源码了。 

#Installation for Apktool
##Windows:
#Download Windows wrapper script (Right click, Save Link As apktool.bat)
#Download apktool-2 (find newest here)
#Rename downloaded jar to apktool.jar
#Move both files (apktool.jar & apktool.bat) to your Windows directory (Usually C://Windows)
#If you do not have access to C://Windows, you may place the two files anywhere then add that directory to your Environment Variables System PATH variable.
#Try running apktool via command prompt
#Linux:
#Download Linux wrapper script (Right click, Save Link As apktool)
#Download apktool-2 (find newest here)
#Make sure you have the 32bit libraries (ia32-libs) downloaded and installed by your linux package manager, if you are on a 64bit unix system.
#(This helps provide support for the 32bit native binary aapt, which is required by apktool)
##Rename downloaded jar to apktool.jar
#Move both files (apktool.jar & apktool) to /usr/local/bin (root needed)
#Make sure both files are executable (chmod +x)
#Try running apktool via cli
#Mac OS X:
#Download Mac wrapper script (Right click, Save Link As apktool)
#Download apktool-2 (find newest here)
#Rename downloaded jar to apktool.jar
#Move both files (apktool.jar & apktool) to /usr/local/bin (root needed)
#Make sure both files are executable (chmod +x)
#Try running apktool via cli
#Note - Wrapper scripts are not needed, but helpful so you don’t have to type java -jar apktool.jar over and over.


masterfgj:bin master$ apktool d /usr/local/bin/tv/tv_video.apk 

I: Using Apktool 2.2.1 on tv_video.apk

I: Loading resource table...

I: Decoding AndroidManifest.xml with resources...

I: Loading resource table from file: /Users/master/Library/apktool/framework/1.apk

I: Regular manifest package...

I: Decoding file-resources...

I: Decoding values */* XMLs...

I: Baksmaling classes.dex...

I: Copying assets and libs...

I: Copying unknown files...

I: Copying original files...

masterfgj:bin master$ ls

apktool	dumpcap	pcre-config	text2pcap	watchman-wait

apktool.jar	editcap	pcregrep	tshark	wget

brew	flow	pcretest	tv	wireshark

capinfos	mergecap	randpkt	tv_video	wstorm

dex2jar-2.0	node	rawshark	watchman

dftest	npm	react-native	watchman-make

masterfgj:bin master$ cd dex2jar-2.0/

masterfgj:dex2jar-2.0 master$ ls

d2j-baksmali.bat	d2j-jar2jasmin.sh

d2j-baksmali.sh	d2j-jasmin2jar.bat

d2j-dex-recompute-checksum.bat	d2j-jasmin2jar.sh

d2j-dex-recompute-checksum.sh	d2j-smali.bat

d2j-dex2jar.bat	d2j-smali.sh

d2j-dex2jar.sh	d2j-std-apk.bat

d2j-dex2smali.bat	d2j-std-apk.sh

d2j-dex2smali.sh	d2j_invoke.bat

d2j-jar2dex.bat	d2j_invoke.sh

d2j-jar2dex.sh	lib

d2j-jar2jasmin.bat

masterfgj:dex2jar-2.0 master$ chmod a+x d2j_invoke.sh

masterfgj:dex2jar-2.0 master$ chmod a+x d2j-dex2jar.sh

masterfgj:dex2jar-2.0 master$ ./d2j-dex2jar.sh /usr/local/bin/tv/tv_video.apk 

dex2jar /usr/local/bin/tv/tv_video.apk -> ./tv_video-dex2jar.jar

masterfgj:dex2jar-2.0 master$ cd ../

masterfgj:bin master$ ls

apktool	dumpcap	pcre-config	text2pcap	wget

apktool.jar	editcap	pcregrep	tshark	wireshark

brew	flow	pcretest	tv	wstorm

capinfos	mergecap	randpkt	watchman

dex2jar-2.0	node	rawshark	watchman-make

dftest	npm	react-native	watchman-wait

masterfgj:bin master$ 

